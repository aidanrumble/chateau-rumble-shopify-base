{% form 'product', product %}

  {% if product.available %}    

    <select name="id" id="variant" data-variant-select="{{ product.id }}">
      {% for variant in product.variants %}
        <option 
          value="{{ variant.id }}"
          data-media-id="{{ variant.featured_media.id | default: product.featured_media.id }}"
          data-price="{{ variant.price | money }}"
          {% if variant.compare_at_price > variant.price %}data-compare-price="{{ variant.compare_at_price | money }}"{% endif %}
          {% if current_variant.id == variant.id %}selected{% endif %}
          {% unless variant.available %}disabled{% endunless %}
        >
          {{ variant.title }} {% unless variant.available %}{{ 'product.sold_out' | t | upcase }}{% endunless %}
        </option>
      {% endfor %}
    </select>

    <div class="field">
      <label for="quantity">{{ 'product.label_quantity' | t }}</label>
      <input type="number" id="quantity" name="quantity" value="1" required min="1" max="50">
    </div>
  
    <button class="btn">{{ 'product.add' | t }}</button>

  {% else %}

    <button class="btn" disabled>{{ 'product.button_sold_out' | t }}</button>
  
  {% endif %}

{% endform %}

<style>
  {% comment %} #variant { display: block !important; } {% endcomment %}
</style>

{{ 'option_selection.js' | shopify_asset_url | script_tag }}

<script>
  document.querySelectorAll('[data-variant-select]').forEach(field => {
    const targetId = field.getAttribute('data-variant-select');
    const priceTargets = document.querySelectorAll('[data-price-id="'+targetId+'"]');
    const comparePriceTargets = document.querySelectorAll('[data-price-compare-id="'+targetId+'"]');
    const galleries = document.querySelectorAll('[data-gallery="'+targetId+'"]');

    field.addEventListener('change', e => {            
      let selected_option = field.options[field.selectedIndex];                
      let mediaId = selected_option.getAttribute('data-media-id');
      let price = selected_option.getAttribute('data-price');
      let comparePrice = selected_option.getAttribute('data-compare-price') ?? '';
            
      // update prices
      priceTargets.forEach(target => target.innerText = price);
      comparePriceTargets.forEach(target => target.innerText = comparePrice);

      // update galleries
      galleries.forEach(gallery => {
        gallery.querySelectorAll('[data-media]').forEach(
          media => media.classList.toggle('hide', media.getAttribute('data-media') != mediaId)     
        );
      });      
    });
  });

  // variant options
  
  const selectCallback = (variant, selector) => {
    console.log('variant changed', variant, selector);
    selector.variantIdField.dispatchEvent(new Event('change'));
    
    console.log(variant.available, selector.variantIdField.closest('form'));

    selector.variantIdField.closest('form').querySelectorAll('button').forEach(button => {
      if (variant.available) {
        button.disabled = false;
        button.innerText = '{{ 'product.add' | t }}';        
      } else {
        button.disabled = true;
        button.innerText = '{{ 'product.button_sold_out' | t }}';
      }
    });
  }

  new Shopify.OptionSelectors('variant', {
    product: {{ product | json }},
    onVariantSelected: selectCallback,
    enableHistoryState: true
  });    
</script>
